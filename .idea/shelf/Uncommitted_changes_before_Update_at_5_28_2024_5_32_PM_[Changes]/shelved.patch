Index: src/main/java/module-info.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>module com.example.demo4 {\r\n    requires javafx.controls;\r\n    requires javafx.fxml;\r\n\r\n    requires org.controlsfx.controls;\r\n    requires org.kordamp.bootstrapfx.core;\r\n    requires java.desktop;\r\n\r\n    opens com.example.demo4 to javafx.fxml;\r\n    exports com.example.demo4;\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/module-info.java b/src/main/java/module-info.java
--- a/src/main/java/module-info.java	(revision f4e53e3addc2114668d2bab5e7ec5ade76c50500)
+++ b/src/main/java/module-info.java	(date 1716869838732)
@@ -5,6 +5,7 @@
     requires org.controlsfx.controls;
     requires org.kordamp.bootstrapfx.core;
     requires java.desktop;
+    requires opencv;
 
     opens com.example.demo4 to javafx.fxml;
     exports com.example.demo4;
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_22\" default=\"true\" project-jdk-name=\"openjdk-22\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision f4e53e3addc2114668d2bab5e7ec5ade76c50500)
+++ b/.idea/misc.xml	(date 1716891416095)
@@ -8,7 +8,7 @@
       </list>
     </option>
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_22" default="true" project-jdk-name="openjdk-22" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_21" project-jdk-name="openjdk-22" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
Index: src/main/java/com/example/demo4/FaceDetectionController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/demo4/FaceDetectionController.java b/src/main/java/com/example/demo4/FaceDetectionController.java
new file mode 100644
--- /dev/null	(date 1716869918283)
+++ b/src/main/java/com/example/demo4/FaceDetectionController.java	(date 1716869918283)
@@ -0,0 +1,204 @@
+package com.example.demo4;
+import java.util.concurrent.Executors;
+import java.util.concurrent.ScheduledExecutorService;
+import java.util.concurrent.TimeUnit;
+
+import org.opencv.core.Mat;
+import org.opencv.core.MatOfRect;
+import org.opencv.core.Rect;
+import org.opencv.core.Scalar;
+import org.opencv.core.Size;
+import org.opencv.imgproc.Imgproc;
+import org.opencv.objdetect.CascadeClassifier;
+import org.opencv.objdetect.Objdetect;
+import org.opencv.videoio.VideoCapture;
+
+import javafx.event.Event;
+import javafx.fxml.FXML;
+import javafx.scene.control.Button;
+import javafx.scene.control.CheckBox;
+import javafx.scene.image.Image;
+import javafx.scene.image.ImageView;
+
+public class FaceDetectionController {
+    @FXML
+    private Button cameraButton;
+    @FXML
+    private ImageView originalFrame;
+    @FXML
+    private CheckBox haarClassifier;
+    @FXML
+    private CheckBox lbpClassifier;
+    private ScheduledExecutorService timer;
+    private VideoCapture capture = new VideoCapture();
+    private boolean cameraActive;
+    private CascadeClassifier faceCascade;
+
+    {
+        faceCascade = new CascadeClassifier();
+    }
+
+    private int absoluteFaceSize = 0;
+
+    @FXML
+    protected void startCamera()
+    {
+        originalFrame.setPreserveRatio(true);
+        if (!this.cameraActive)
+        {
+            this.haarClassifier.setDisable(true);
+            this.lbpClassifier.setDisable(true);
+
+            this.capture.open(0);
+
+            if (this.capture.isOpened())
+            {
+                this.cameraActive = true;
+
+                // 30fps
+                Runnable frameGrabber = new Runnable() {
+
+                    @Override
+                    public void run()
+                    {
+                        Mat frame = grabFrame();
+                        Image imageToShow = Utils.mat2Image(frame);
+                        updateImageView(originalFrame, imageToShow);
+                    }
+                };
+
+                this.timer = Executors.newSingleThreadScheduledExecutor();
+                this.timer.scheduleAtFixedRate(frameGrabber, 0, 33, TimeUnit.MILLISECONDS);
+
+                // update the button content
+                this.cameraButton.setText("Stop Camera");
+            }
+            else
+            {
+                // log the error
+                System.err.println("Failed to open the camera connection...");
+            }
+        }
+        else
+        {
+            this.cameraActive = false;
+            this.cameraButton.setText("Start Camera");
+
+            this.haarClassifier.setDisable(false);
+            this.lbpClassifier.setDisable(false);
+
+            this.stopAcquisition();
+            updateImageView(originalFrame, null);
+
+        }
+    }
+    private Mat grabFrame()
+    {
+        Mat frame = new Mat();
+
+        if (this.capture.isOpened())
+        {
+            try
+            {
+                this.capture.read(frame);
+
+                if (!frame.empty())
+                {
+                    this.detectAndDisplay(frame);
+                }
+
+            }
+            catch (Exception e)
+            {
+                System.err.println("Exception during the image elaboration: " + e);
+            }
+        }
+
+        return frame;
+    }
+
+    private void detectAndDisplay(Mat frame)
+    {
+        MatOfRect faces = new MatOfRect();
+        Mat grayFrame = new Mat();
+
+        Imgproc.cvtColor(frame, grayFrame, Imgproc.COLOR_BGR2GRAY);
+        Imgproc.equalizeHist(grayFrame, grayFrame);
+
+        if (this.absoluteFaceSize == 0)
+        {
+            int height = grayFrame.rows();
+            if (Math.round(height * 0.2f) > 0)
+            {
+                this.absoluteFaceSize = Math.round(height * 0.2f);
+            }
+        }
+
+        // detect faces
+        this.faceCascade.detectMultiScale(grayFrame, faces, 1.1, 2, 0 | Objdetect.CASCADE_SCALE_IMAGE,
+                new Size(this.absoluteFaceSize, this.absoluteFaceSize), new Size());
+
+        Rect[] facesArray = faces.toArray();
+        for (int i = 0; i < facesArray.length; i++)
+            Imgproc.rectangle(frame, facesArray[i].tl(), facesArray[i].br(), new Scalar(0, 255, 0), 3);
+
+    }
+    @FXML
+    protected void haarSelected(Event event)
+    {
+        // check whether the lpb checkbox is selected and deselect it
+        if (this.lbpClassifier.isSelected())
+            this.lbpClassifier.setSelected(false);
+
+        this.checkboxSelection("src/main/resources/org/source/facedetection/haarcascades/haarcascade_frontalface_alt.xml");
+    }
+    @FXML
+    protected void lbpSelected(Event event)
+    {
+        // check whether the haar checkbox is selected and deselect it
+        if (this.haarClassifier.isSelected())
+            this.haarClassifier.setSelected(false);
+
+        this.checkboxSelection("src/main/resources/org/source/facedetection/lbpcascades/lbpcascade_frontalface_improved.xml");
+    }
+
+    private void checkboxSelection(String classifierPath)
+    {
+        // load the classifier(s)
+        this.faceCascade.load(classifierPath);
+
+        // now the video capture can start
+        this.cameraButton.setDisable(false);
+    }
+    private void stopAcquisition()
+    {
+        if (this.timer!=null && !this.timer.isShutdown())
+        {
+            try
+            {
+                // stop the timer
+                this.timer.shutdown();
+                this.timer.awaitTermination(33, TimeUnit.MILLISECONDS);
+            }
+            catch (InterruptedException e)
+            {
+                // log any exception
+                System.err.println("Exception in stopping the frame capture, trying to release the camera now... " + e);
+            }
+        }
+
+        if (this.capture.isOpened())
+        {
+            // release the camera
+            this.capture.release();
+        }
+    }
+    private void updateImageView(ImageView view, Image image)
+    {
+        Utils.onFXThread(view.imageProperty(), image);
+    }
+    protected void setClosed()
+    {
+        this.stopAcquisition();
+    }
+}
Index: src/main/java/com/example/demo4/Utils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/demo4/Utils.java b/src/main/java/com/example/demo4/Utils.java
new file mode 100644
--- /dev/null	(date 1716869838725)
+++ b/src/main/java/com/example/demo4/Utils.java	(date 1716869838725)
@@ -0,0 +1,51 @@
+package com.example.demo4;
+
+
+import java.awt.image.BufferedImage;
+import java.awt.image.DataBufferByte;
+import javafx.application.Platform;
+import javafx.beans.property.ObjectProperty;
+import javafx.scene.image.Image;
+import org.opencv.core.Mat;
+import javafx.embed.swing.SwingFXUtils;
+public class Utils {
+    public static Image mat2Image(Mat frame)
+    {
+        try
+        {
+            return SwingFXUtils.toFXImage(matToBufferedImage(frame), null);
+        }
+        catch (Exception e)
+        {
+            System.err.println("Cannot convert the Mat object: " + e);
+            return null;
+        }
+    }
+    public static <T> void onFXThread(final ObjectProperty<T> property, final T value)
+    {
+        Platform.runLater(() -> {
+            property.set(value);
+        });
+    }
+    private static BufferedImage matToBufferedImage(Mat original)
+    {
+        // init
+        BufferedImage image = null;
+        int width = original.width(), height = original.height(), channels = original.channels();
+        byte[] sourcePixels = new byte[width * height * channels];
+        original.get(0, 0, sourcePixels);
+
+        if (original.channels() > 1)
+        {
+            image = new BufferedImage(width, height, BufferedImage.TYPE_3BYTE_BGR);
+        }
+        else
+        {
+            image = new BufferedImage(width, height, BufferedImage.TYPE_BYTE_GRAY);
+        }
+        final byte[] targetPixels = ((DataBufferByte) image.getRaster().getDataBuffer()).getData();
+        System.arraycopy(sourcePixels, 0, targetPixels, 0, sourcePixels.length);
+
+        return image;
+    }
+}
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"28421e6a-11be-4cf3-ba4a-07d3b3251545\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/demo4/Application.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/demo4/Application.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/demo4/FilterController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/demo4/FilterController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/demo4/FilterImageController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/demo4/FilterImageController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/demo4/MainController.java\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/com/example/demo4/filter.css\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/demo4/filter.css\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/com/example/demo4/image-view.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/demo4/image-view.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/com/example/demo4/image.css\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/demo4/image.css\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/com/example/demo4/takeAPhoto.css\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/com/example/demo4/takeAPhoto.css\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n        <option value=\"JavaFXApplication\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHomeTypeForPersistence\" value=\"WRAPPER\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 4\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2glSfhLi6Yen15qVtlmJIKdKPoC\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.Application.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.HelloApplication.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;Merging main&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/bachkhoahanoi/Ky4/OOP/ThucHanh/JavaFX/demo4/src/main/resources/com/example/demo4&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;\r\n  },\r\n  &quot;keyToStringList&quot;: {\r\n    &quot;com.intellij.ide.scratch.ScratchImplUtil$2/New Scratch File&quot;: [\r\n      &quot;CSS&quot;\r\n    ]\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\bachkhoahanoi\\Ky4\\OOP\\ThucHanh\\JavaFX\\demo4\\src\\main\\resources\\com\\example\\demo4\" />\r\n    </key>\r\n    <key name=\"MoveInnerDialog.RECENTS_KEY\">\r\n      <recent name=\"\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Application\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.demo4.Application\" />\r\n      <module name=\"demo4\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.demo4.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Application\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"28421e6a-11be-4cf3-ba4a-07d3b3251545\" name=\"Changes\" comment=\"\" />\r\n      <created>1716270777718</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1716270777718</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision f4e53e3addc2114668d2bab5e7ec5ade76c50500)
+++ b/.idea/workspace.xml	(date 1716892320372)
@@ -5,20 +5,19 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="28421e6a-11be-4cf3-ba4a-07d3b3251545" name="Changes" comment="">
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/example/demo4/FaceDetectionController.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/example/demo4/Utils.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/demo4/Application.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/demo4/Application.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/demo4/FilterController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/demo4/FilterController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/demo4/FilterImageController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/demo4/FilterImageController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/demo4/MainController.java" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/demo4/filter.css" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/example/demo4/filter.css" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/demo4/image-view.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/example/demo4/image-view.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/demo4/image.css" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/example/demo4/image.css" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/com/example/demo4/takeAPhoto.css" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/com/example/demo4/takeAPhoto.css" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/module-info.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/module-info.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
     <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="CodeInsightWorkspaceSettings">
+    <option name="optimizeImportsOnTheFly" value="true" />
   </component>
   <component name="FileTemplateManagerImpl">
     <option name="RECENT_TEMPLATES">
@@ -29,7 +28,27 @@
     </option>
   </component>
   <component name="Git.Settings">
+    <option name="RECENT_BRANCH_BY_REPOSITORY">
+      <map>
+        <entry key="$PROJECT_DIR$" value="master" />
+      </map>
+    </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+    <option name="UPDATE_TYPE" value="REBASE" />
+  </component>
+  <component name="GitHubPullRequestSearchHistory"><![CDATA[{
+  "lastFilter": {
+    "state": "OPEN",
+    "assignee": "lonhoangsa"
+  }
+}]]></component>
+  <component name="GithubPullRequestsUISettings">
+    <option name="selectedUrlAndAccountId">
+      <UrlAndAccount>
+        <option name="accountId" value="b74fde4a-6214-438f-8afd-a2e6727b9d6a" />
+        <option name="url" value="https://github.com/ngochuyen2609/AppOpenCV_NgocHuyen.git" />
+      </UrlAndAccount>
+    </option>
   </component>
   <component name="MavenImportPreferences">
     <option name="generalSettings">
@@ -37,37 +56,50 @@
         <option name="mavenHomeTypeForPersistence" value="WRAPPER" />
       </MavenGeneralSettings>
     </option>
+  </component>
+  <component name="ProblemsViewState">
+    <option name="selectedTabId" value="CurrentFile" />
   </component>
   <component name="ProjectColorInfo">{
   &quot;associatedIndex&quot;: 4
 }</component>
   <component name="ProjectId" id="2glSfhLi6Yen15qVtlmJIKdKPoC" />
-  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
+  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
+    <ConfirmationsSetting value="2" id="Add" />
+  </component>
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;Application.Application.executor&quot;: &quot;Run&quot;,
-    &quot;Application.HelloApplication.executor&quot;: &quot;Run&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;Merging main&quot;,
-    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
-    &quot;last_opened_file_path&quot;: &quot;C:/bachkhoahanoi/Ky4/OOP/ThucHanh/JavaFX/demo4/src/main/resources/com/example/demo4&quot;,
-    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,
-    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
-    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "Application.Application.executor": "Run",
+    "Application.HelloApplication.executor": "Run",
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
+    "git-widget-placeholder": "sa",
+    "kotlin-language-version-configured": "true",
+    "last_opened_file_path": "C:/Users/hoang/OneDrive/Desktop/k0d3/OOP/project/src/main/java/com/example/demo4",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "nodejs_package_manager_path": "npm",
+    "project.structure.last.edited": "Modules",
+    "project.structure.proportion": "0.15",
+    "project.structure.side.proportion": "0.2",
+    "vue.rearranger.settings.migration": "true"
   },
-  &quot;keyToStringList&quot;: {
-    &quot;com.intellij.ide.scratch.ScratchImplUtil$2/New Scratch File&quot;: [
-      &quot;CSS&quot;
+  "keyToStringList": {
+    "com.intellij.ide.scratch.ScratchImplUtil$2/New Scratch File": [
+      "CSS"
     ]
   }
-}</component>
+}]]></component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
+      <recent name="C:\Users\hoang\OneDrive\Desktop\k0d3\OOP\project\src\main\java\com\example\demo4" />
       <recent name="C:\bachkhoahanoi\Ky4\OOP\ThucHanh\JavaFX\demo4\src\main\resources\com\example\demo4" />
     </key>
     <key name="MoveInnerDialog.RECENTS_KEY">
@@ -91,9 +123,18 @@
     <recent_temporary>
       <list>
         <item itemvalue="Application.Application" />
+        <item itemvalue="Application.Application" />
       </list>
     </recent_temporary>
   </component>
+  <component name="SharedIndexes">
+    <attachedChunks>
+      <set>
+        <option value="jdk-18.0.2-azul-18.0.2.1-4caba194b151-760f583b" />
+        <option value="jdk-22-openjdk-22-4caba194b151-f504ca98" />
+      </set>
+    </attachedChunks>
+  </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task active="true" id="Default" summary="Default task">
@@ -102,7 +143,13 @@
       <option name="number" value="Default" />
       <option name="presentableId" value="Default" />
       <updated>1716270777718</updated>
+      <workItem from="1716868848671" duration="522000" />
+      <workItem from="1716869465620" duration="646000" />
+      <workItem from="1716891120423" duration="1118000" />
     </task>
     <servers />
   </component>
+  <component name="TypeScriptGeneratedFilesManager">
+    <option name="version" value="3" />
+  </component>
 </project>
\ No newline at end of file
